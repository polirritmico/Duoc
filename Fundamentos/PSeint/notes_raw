Definir foo Como Numero;   // Float: 1, 1.234
Definir foo Como Real;     // Float: 1, 1.234
Definir foo Como Entero;   // Integer: 1, 2, 3

Definir foo Como Caracter; // String: alfanumérico

Definir foo Como Logico;   // Boolean: Verdadero o Falso

-----------------------------------------------------------------------------

Escribir "Foo";   // Imprime Foo en la pantalla (sin comillas)
Definir foo Como Caracter; // ¡Primero definir para evitar fallo!
foo = "Foo";
Leer foo; // output: Foo

-----------------------------------------------------------------------------

Funcion output <- Bar (arg)
    Definir output Como Caracter; // ¡Definir el retorno si no es un argumento!
    output = arg; // output se retorna automáticamente al terminar la función
FinFuncion

Proceso Main
    Definir foo Como Caracter;
    foo = Bar("Foo");
    Escribir foo;
FinProceso // output: Foo

-----------------------------------------------------------------------------

Definir booleano Como Logico;
booleano = Verdadero;

Si booleano Entonces
    Escribir "True";
SiNo
    Escribir "False";
FinSi // output: True

-----------------------------------------------------------------------------

Definir foo Como Caracter;
foo = "Foo";

Si foo == "Bar" O foo <> "Foo" Entonces
    Escribir "True";
SiNo
    Escribir "False";
FinSi // output: False

-----------------------------------------------------------------------------

Definir foo Como Entero;
Definir bar Como Entero;
Definir buz Como Entero;
Definir seleccion Como Entero;
foo = 1;
bar = 2;
buz = 3;
seleccion = buz;

Segun seleccion Hacer
    foo:
        Escribir "Foo";
    bar:
        Escribir "Bar";
    3:
        Escribir "Buz";

    De Otro Modo:
        Escribir "Default";
FinSegun // Output: Buz

-----------------------------------------------------------------------------

Definir i Como Entero;
Para i <- 1 Hasta 10 Con Paso 2 Hacer
    Escribir i;
FinPara // Output: 1, 3, 5, 7, 9

-----------------------------------------------------------------------------

Definir x Como Entero;
x = 0;

Mientras x < 5 Hacer
    Escribir x;
    x = x + 1;
FinMientras // Output: 0 1 2 3 4

-----------------------------------------------------------------------------

Definir iteracion Como Entero;
iteracion = 0;

Repetir
    Escribir iteracion;

    iteracion = iteracion + 1;
Hasta Que iteracion > 4 // Output: 0 1 2 3 4

-----------------------------------------------------------------------------

Definir foo Como Caracter; // Definir tipo de datos del arreglo
Dimension foo[2]; // Definir tamaño. ¡Debe ser un literal no una variable!

foo[0] = "Foo";
foo[1] = "Bar";

Definir index Como Entero;
Para index = 0 Hasta 1 Hacer // "Hasta" es inclusivo (Ej: "Hasta 3" incluye el 3)
    Escribir foo[index];
FinPara // output: Foo Bar

-----------------------------------------------------------------------------

Definir arraySize Como Entero; // Variable con el tamaño que usaremos del arreglo
Definir array Como Caracter; // Tipo de datos del arreglo
Dimension array[9999]; // Le reservamos mucho espacio (debe ser mayor al arraySize)

arraySize = 2; // el verdadero tamaño del arreglo
array[0] = "Foo";
array[1] = "Bar";

Definir index Como Entero;
Para index = 0 Hasta arraySize - 1 Hacer // Menos 1 porque "Hasta" es inclusivo
    Escribir array[index];
FinPara

-----------------------------------------------------------------------------

Definir matrix Como Caracter; // Definir en base a los tipos de datos que contiene
Dimension matrix[3,3]; // de 0 hasta 2 (n-1)

matrix[0,0] = "0";
matrix[0,1] = "1";
matrix[0,2] = "2";
matrix[1,0] = "3";
matrix[1,1] = "4";
matrix[1,2] = "5";
matrix[2,0] = "6";
matrix[2,1] = "7";
matrix[2,2] = "8";

Definir columna Como Entero;
Definir fila Como Entero;

Definir linea Como Caracter;

Para fila = 0 Hasta 2 Hacer
    linea = "";
    Para columna = 0 Hasta 2 Hacer
        linea = linea + matrix[fila, columna];
    FinPara
    Escribir linea;
FinPara // output: 012 345 678
